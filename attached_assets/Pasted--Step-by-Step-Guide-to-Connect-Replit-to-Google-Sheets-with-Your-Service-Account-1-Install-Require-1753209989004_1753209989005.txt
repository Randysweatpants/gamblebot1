‚úÖ Step-by-Step Guide to Connect Replit to Google Sheets with Your Service Account
1. Install Required Libraries
In your Replit shell or replit.nix, install:

bash
Copy code
pip install gspread google-auth
2. Save Your JSON Key
Save your service account key (5202e02fc7ed06322065824948fb0a1da1328bc4.json) to your Replit project.

Rename it to google-credentials.json.

3. Use This Python Code
Here‚Äôs what you should copy into your Replit code to fetch the sheet data:

python
Copy code
import gspread
from google.oauth2.service_account import Credentials
import pandas as pd

def get_advanced_stats_from_sheet():
    # Define the scopes
    scopes = ["https://www.googleapis.com/auth/spreadsheets.readonly"]

    # Load credentials
    creds = Credentials.from_service_account_file(
        "google-credentials.json", scopes=scopes
    )

    # Authorize client
    client = gspread.authorize(creds)

    # Open the Google Sheet
    sheet = client.open_by_url(
        "https://docs.google.com/spreadsheets/d/11EyxXDDChFD91Be-_K5oMbLxbejIAUP6O54_pONAcPA/edit"
    )
    worksheet = sheet.sheet1
    data = worksheet.get_all_records()

    # Return as DataFrame
    return pd.DataFrame(data)

# Example usage
stats_df = get_advanced_stats_from_sheet()
print(stats_df.head())
Let me know if you want this integrated directly into your existing gamble_bot.py to support team prediction based on those advanced stats. 





You said:
yes give the whole code so i can copy it 


ChatGPT said:
The Replit environment you're using likely doesn't have the gspread and google-auth libraries installed yet.

To fix this, tell Replit to do the following:

‚úÖ Step-by-step setup for Google Sheets integration in Replit
Install required packages
In your replit.nix or Shell, install:

bash
Copy code
pip install gspread google-auth
Place your Google service account key
Save your key file (e.g., google-credentials.json) in the root of your Replit project.

Add this code to your bot file to pull advanced stats:

python
Copy code
import gspread
from google.oauth2.service_account import Credentials
import pandas as pd

def get_advanced_stats_from_sheet():
    scopes = ["https://www.googleapis.com/auth/spreadsheets.readonly"]
    creds = Credentials.from_service_account_file("google-credentials.json", scopes=scopes)
    client = gspread.authorize(creds)
    sheet = client.open_by_url("https://docs.google.com/spreadsheets/d/11EyxXDDChFD91Be-_K5oMbLxbejIAUP6O54_pONAcPA/edit")
    worksheet = sheet.sheet1
    data = worksheet.get_all_records()
    return pd.DataFrame(data)
Use it in a command (for example):

python
Copy code
@bot.command(name="advanced_stats")
async def advanced_stats(ctx):
    try:
        df = get_advanced_stats_from_sheet()
        top5 = df.head(5)
        msg = "üìä Top 5 Teams by Advanced Stats:\n"
        for idx, row in top5.iterrows():
            msg += f"\n{row['Team']} ‚Äì xBA: {row.get('xBA', 'N/A')}, xSLG: {row.get('xSLG', 'N/A')}, wOBA: {row.get('wOBA', 'N/A')}"
        await ctx.send(msg)
    except Exception as e:
        await ctx.send(f"‚ùå Error pulling advanced stats: {e}")
